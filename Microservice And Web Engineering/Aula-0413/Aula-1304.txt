Utilizamos as seguintes dependencias para o projeto:

- Spring Web;
- Spring Boot DevTools;
- Thymeleaf;
- Spring Configuration Processor;

para falar para o spring que essa classe é um controller utilizamos anotações

o conceito de pipeline diz que podemos adicionar comportamentos antes mesmo de uma requisição no controller ou também depois da requisição bater no controller.

Maiores ofensores de performance:
- Disco (fazer operação em disco é caro)
- Rede (depende muito de quantos pulos sua aplicação vai fazer, se for entre dois servidores é uma coisa, se for na nuvem pode acabar dando muitos saltos)
- Garbage Colector (é uma ferramenta que roda de tempos em tempos e verifica as instancias que não estao sendo usadas, e as que não estao sendo usadas são limpas pelo coletor)

temos cache do servidor e do cliente
o do cliente é um problema pq como podemos fazer para ele expirar?

cache é composto por uma chave novamente é um String, dps ele tem o corpo e o TTL (time do leave)

chave - geralmente chave unica
body - é a informação que você quer (binario pq é mais leve dessa forma)
TTL - T

o trabalho do cache é amenizar a pressao em cima dos servidores

quando criamos cache em CDN: AKAMAY, AZO

Content Delivery Network (CDN)



Checkpoint vai ter um problema, vamos precisar criar um projeto, a view conectando no banco.